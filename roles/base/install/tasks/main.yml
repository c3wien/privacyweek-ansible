---
- name: install python
  raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
- name: 'install aptitude'
  raw: apt-get -y install aptitude

- name: Install base packages
  apt:
    state: present
    name: [ aptitude, less, sudo, vim-nox, htop, bwm-ng, dnsutils, psmisc, whois, mtr-tiny, iputils-tracepath, bash-completion, strace, lsof, ltrace, tcpdump, rsync, screen, debsums, ufw, net-tools, apt-transport-https, moreutils ]

- name: Set hostname
  hostname:
    name: "{{ hostname }}"
  notify: "reboot"

- name: update /etc/hosts with hostname
  lineinfile:
    dest: /etc/hosts
    state: present
    regexp: '^127\.0\.1\.1'
    line: '127.0.1.1 {{ hostname }}'
    path: /etc/hosts

- name: ensure sudo group
  group:
    name: sudo
    state: present

- name: enable NOPASSWD sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: ensure user is present
  user: 
    name: "{{ username }}"
    shell: /bin/bash
    groups: sudo
    append: yes
    state: present

- name: updating authorized_keys
  import_role:
    name: base/authorized_keys

- name: SSH port {{ ssh_port }}
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^Port"
    line: "Port {{ ssh_port }}"
  notify: "restart sshd"

- name: SSH disable password auth
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
  notify: "restart sshd"

- name: remove root password
  user:
    name: root
    password: ''

- name: Install prometheus-node-exporter
  apt:
    state: present
    name: [ prometheus-node-exporter ]
  when: prometheus_node_exporter == true

- name: set firewall rules for prometheus-node-exporter
  ufw:
    rule: allow
    port: 9100
    proto: tcp
    src: '{{ item }}'
  with_items: '{{ prometheus_node_exporter_subnets }}'
  when: prometheus_node_exporter == true


- name: UFW logging disable
  ufw:
    logging: off

- name: UFW ports
  ufw:
    rule: allow
    port: '{{ item }}'
    proto: tcp
  with_items:
    - '{{ ssh_port }}'

- name: enable UFW
  ufw:
    state: enabled

